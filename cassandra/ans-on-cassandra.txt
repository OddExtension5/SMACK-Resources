************ SET-1 *************************
1.  c. ACID Compilance
2.  b. False
3.  a. True
4.  b. A amster node determine who gets what data
5.  a. Available and partition tolerant
6.  a. True
7.  a. When creating a keyspace
8.  a. True
9.  c. Both read and write requests
10. b. False
11. a. On a per-query basis

****************** SET-2 **************************
1.  a. True
2.  b. Coordinator node
3.  b. Commit log to Memtable to SStable
4.  a. True
5.  b. False
6.  a. Taking small SSTables and merges them into bigger ones
7.  b. Timestamps
8.  d. All of the above
9.  e. All of the above
10. a. True

*************** SET-3 ***************************
1. d. group rows physically together on disk based on the partition key.
2. b. It hashes the partition key values to create a partition token.
3. b. False
4. b. False
5. b. False
6. a. Reading sorted data is a matter of seeking the disk head once.
7. b. False
8. a. 2-4 Terabytes
9. b. False
10. c. 256
11. a. num_tokens
12. b. False
13. b. False
14. d. All of the above
15. c. Determine/declare each node's rack and data center.
16. a. True
17. d. CassandraSnitch
18. b. False
19. d. All of the above.
20. b. availability/partition tolerance
21. b. 2
22. e. All of the above
23. b. 3 hours
24. b. False
25. d. ALL
26. b. Sets the probability which Cassandra will perform a read repair with a consistency level less than ALL.
27. b. to replay if a crashed node restarts.
28. d. After the commit log and MemTable are written
29. b. SSTable, d. Memtable
30. c. stores byte offsets into the partition index.
31. a. stores the byte offset of the most recently accessed records.
32. b. SSTable, d. Partition Index
33. a. More optimal disk usage, b. Faster reads, d. Less memory pressure
34. b. false
35. d. The input partition segments are made up of mostly INSERT operations.

**************************** SET-4 ***************************************************************

1. b. Jaba Management Extension
2. c. 2
3. c. No authorization
4. c. keys_only
5. a. -cf
6. d. None of these
7. c. false
8. d. 1.6
9. b. commit log
10. a. 9160.0
11.  b. nodetool
12. d. None of these
13.  c. 3
14. a. BigIntegerToken
15. c. New Cassandra instance
16. a. Facebook
17. c. either periodic or batch
18. a. trace
19. c. best efforts are given
20. a. AllowAllAuthenticator
21. c. plaintext
22. c. Fast hash-based partitioner
23. c. data
24. b. Chech GC
25. b. Rack Inferring
26. d. log4j-server.properties
27. a. Authorizer
28. b. 7001.0
29. d. snitch
30. d. Query Pattern
31. d. 128
32. b. 256
33. d. 32
34. c. LocalStartegy
35. a. INFO

************************************** SET-5 *************************************************

1.  c. Schema
2.  b. Throughput
3.  e. All of the above 
4.  e. None of the Above
5.  b. False
6.  b. False
7.  b. Process Identifier
8.  b. All the default stats plus memory
9.  a. True
10. d. Process up time
11. b. False
12. c. nodeinfo
13. a. info
14. c. Low GC times are desirable so Cassandra can spend more time servicing requests
15. b. You can determine your schema response time with gossipinfo.
16. d. A short version of the command is nodetool coffeetablehistograms
